<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmomen.module.order.entity.mapper.TbReturnOrderItemMapper" >
  <resultMap id="BaseResultMap" type="com.xmomen.module.order.entity.TbReturnOrderItem" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="RETURN_ORDER_ID" property="returnOrderId" jdbcType="INTEGER" />
    <result column="ITEM_CODE" property="itemCode" jdbcType="VARCHAR" />
    <result column="ITEM_NUMBER" property="itemNumber" jdbcType="INTEGER" />
    <result column="ITEM_NAME" property="itemName" jdbcType="VARCHAR" />
    <result column="IS_NEED" property="isNeed" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, RETURN_ORDER_ID, ITEM_CODE, ITEM_NUMBER, ITEM_NAME, IS_NEED
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xmomen.module.order.entity.TbReturnOrderItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_return_order_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xmomen.module.order.entity.TbReturnOrderItemExample" >
    delete from tb_return_order_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.xmomen.module.order.entity.TbReturnOrderItem" useGeneratedKeys="true" keyProperty="id" keyColumn="ID" >
    insert into tb_return_order_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="returnOrderId != null" >
        RETURN_ORDER_ID,
      </if>
      <if test="itemCode != null" >
        ITEM_CODE,
      </if>
      <if test="itemNumber != null" >
        ITEM_NUMBER,
      </if>
      <if test="itemName != null" >
        ITEM_NAME,
      </if>
      <if test="isNeed != null" >
        IS_NEED,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="returnOrderId != null" >
        #{returnOrderId,jdbcType=INTEGER},
      </if>
      <if test="itemCode != null" >
        #{itemCode,jdbcType=VARCHAR},
      </if>
      <if test="itemNumber != null" >
        #{itemNumber,jdbcType=INTEGER},
      </if>
      <if test="itemName != null" >
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="isNeed != null" >
        #{isNeed,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xmomen.module.order.entity.TbReturnOrderItemExample" resultType="java.lang.Integer" >
    select count(*) from tb_return_order_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_return_order_item
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.returnOrderId != null" >
        RETURN_ORDER_ID = #{record.returnOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.itemCode != null" >
        ITEM_CODE = #{record.itemCode,jdbcType=VARCHAR},
      </if>
      <if test="record.itemNumber != null" >
        ITEM_NUMBER = #{record.itemNumber,jdbcType=INTEGER},
      </if>
      <if test="record.itemName != null" >
        ITEM_NAME = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.isNeed != null" >
        IS_NEED = #{record.isNeed,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>